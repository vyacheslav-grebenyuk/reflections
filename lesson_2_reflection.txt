What happens when you initialize a repository? Why do you need to do it?
	Git creates dirrectory .git in which it initiallizes all neccessary data
	about future commits, changes, files included in commits and so on.
	At the start there is no commits or files added to this lists.
	We need to do this for preparing git to correct work with project files.	

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging area is a container of files which are prepared for commit.
	Working directory contais all files of staging area. The same is not true
	about staging area files. 
	After a commit all files from staging area have been put into repository.
	With staging area we can control the list of files from all changed files
	we want to commit in one bunch to the repository.

How can you use the staging area to make sure you have one commit per logical
change?
	While looking into difference between working directory and staging area,
	and staging area and last commit we can find all changes made in files since
	last commit and decide which files we have to add to the next commit and
	what changes are unnecessary and can be undone with git reset --hard command.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
